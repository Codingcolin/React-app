class TodoApp extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      todoItems:[],
      entry:""
    };
    this.handleSubmit = this.handleSubmit.bind(this);
    this.handleTodoEntry = this.handleTodoEntry.bind(this);
    this.handleClear = this.handleClear.bind(this);
  }
  handleSubmit () {
    let nextItems = this.state.todoItems.concat([this.state.entry]);
    let text = '';
    this.setState({
      todoItems: nextItems,
      entry: text
    });
  }
  
  handleTodoEntry(event) {
    this.setState({entry: event.target.value});
  }
  
  handleClear(event) {
    this.setState({
      todoItems: [],
      entry:""
    });
  }
  
  render(){
    return (
   <div> 
      <h1>{this.props.title}</h1>
       <TodoList items={this.state.todoItems} />
       <TodoForm
         inputValue={this.state.entry}
         changeHandler={this.handleTodoEntry}
         clickHandler={this.handleSubmit}
         deleteHandler={this.handleClear}
         />
     
   </div>
   );
  } 
}


class TodoList extends React.Component {
  constructor(props) {
    super(props);
  }
  
  render(){
    const createItem = (itemText) => {
      return (
       <TodoItem>{itemText}</TodoItem>
      )
    };
          
    return (
      <div>
          {this.props.items.map(createItem)}
      </div>
    ); 
  }
   
}

const TodoItem = (props) => {
  return (
    <li>{props.children}</li>
  );
}

const TodoForm = (props) => {
  return(
    <form>
        <label>Add new item: </label>
        <input placeholder= "New todo item" value={props.inputValue}
          onChange={props.changeHandler}/>
        <button
          type="button"
          onClick={props.clickHandler}
          >Add new todo item</button>
      <button type="button"
        onClick={props.deleteHandler}>
        Delete</button>
     </form>
  );
}

ReactDOM.render(<TodoApp title= "Colin's TodoList"/>, document.getElementById('root'));

//ReactDOM.render(<div>Hello!</div>, document.getElementById('root'));